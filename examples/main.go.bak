package main

import (
	"encoding/hex"
	"log"

	"github.com/mebusy/goweb/encrypt"
	"github.com/mebusy/goweb/iap"
	"github.com/mebusy/goweb/tools"
)

func main() {
    log.Println( tools.UtctimestampToBeijingDate( tools.GetSeconds(), "2006-01-02 15:04:05" ) )
    // log.Println( encrypt.SignSHA256withRSA( "a", "b", false ) )
    log.Println("done")

    b64data := `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`

    b64data2 := `MIIHxQYJKoZIhvcNAQcCoIIHtjCCB7ICAQExDzANBglghkgBZQMEAgEFADCCAosGCSqGSIb3DQEHAaCCAnwEggJ4MYICdDAPAgEAAgEBBAcMBVhjb2RlMAsCAQECAQEEAwIBADAiAgECAgEBBBoMGGNvbS50ZW1wb3JhcnkuaXBhdGVzdGFwcDALAgEDAgEBBAMMATEwEAIBBAIBAQQI8PlffQAAAAAwHAIBBQIBAQQUnzfBhIpgRTQXU/TVPjODiLShhfIwCgIBCAIBAQQCFgAwIgIBDAIBAQQaFhgyMDIxLTA0LTIwVDE5OjAxOjE5KzA4MDAwgZsCARECAQEEgZIxgY8wDAICBqUCAQEEAwIBATAfAgIGpgIBAQQWDBRjb20udGVtcG9yYXJ5LnJlbmV3MzAOAgIGpwIBAQQFDAMxMTUwHwICBqgCAQEEFhYUMjAyMS0wNC0yMFQxOTowMTowNVowHwICBqwCAQEEFhYUMjAyMS0wNS0yMFQxOTowMTowNVowDAICBrcCAQEEAwIBADBlAgERAgEBBF0xWzAMAgIGpQIBAQQDAgEBMBsCAgamAgEBBBIMEGNvbS50ZW1wb3JhcnkubmMwDQICBqcCAQEEBAwCODgwHwICBqgCAQEEFhYUMjAyMS0wNC0xOVQxMjoyMjowN1owgZkCARECAQEEgZAxgY0wDAICBqUCAQEEAwIBATAeAgIGpgIBAQQVDBNjb20udGVtcG9yYXJ5LnJlbmV3MA0CAganAgEBBAQMAjg5MB8CAgaoAgEBBBYWFDIwMjEtMDQtMTlUMTI6MjI6MjFaMB8CAgasAgEBBBYWFDIwMjEtMDUtMTlUMTI6MjI6MjFaMAwCAga3AgEBBAMCAQAwIgIBFQIBAQQaFhg0MDAxLTAxLTAxVDA4OjAwOjAwKzA4MDCgggN4MIIDdDCCAlygAwIBAgIBATANBgkqhkiG9w0BAQsFADBfMREwDwYDVQQDDAhTdG9yZUtpdDERMA8GA1UECgwIU3RvcmVLaXQxETAPBgNVBAsMCFN0b3JlS2l0MQswCQYDVQQGEwJVUzEXMBUGCSqGSIb3DQEJARYIU3RvcmVLaXQwHhcNMjAwNDAxMTc1MjM1WhcNNDAwMzI3MTc1MjM1WjBfMREwDwYDVQQDDAhTdG9yZUtpdDERMA8GA1UECgwIU3RvcmVLaXQxETAPBgNVBAsMCFN0b3JlS2l0MQswCQYDVQQGEwJVUzEXMBUGCSqGSIb3DQEJARYIU3RvcmVLaXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDbf5A8LHMP25cmS5O7CvihIT7IYdkkyF4fdT7ak9sxGpGAub/lDMs8uw5EYib6BCm2Sedv4BvmDWjNJW7Ddgj1SguuenQ8xKkLs89iD/u0vPfbhF4o60cN8e2LrPWfsAk4o257yyZQChrhidFydgs5TMtPbsCzX7eVurmoXUp0q+9vQaV+CY26PT3NcFfY7e/V2nfIkwQc7wmIeGXOgfKNcucHGm4mEvcysQ27OJBrBsT8DeWVUM2RyLol9FjJjOFx20pF8y0ZlgNWgaZE7nV3W1PPeKxduj5fUCtcKYzdwtcqF98itNfkeKivqG2nwdpoLWbMzykLUCzjwvvmXxLBAgMBAAGjOzA5MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgKEMBYGA1UdJQEB/wQMMAoGCCsGAQUFBwMDMA0GCSqGSIb3DQEBCwUAA4IBAQCyAOA88ejpYr3A1h1Anle5OJB3dlLSqEtwbrhnmfuzilWf7x0ouF8q0XOfNUc3u0bTdhDy8GnszWKZcflgioRIOMS9i2cluatsM2Wt2MKaeEgP6czBJw3Gz2Q8bYBZM4zKNgYqERuNSc4I/2bARyhL61rBKwlWLKWqCQN7MjHc6IV4SM7AxRIRag8Mri8Fym96ZH8gLHXmTLES0/3jH14NfbhY16B85H9jq5eaK8Mq2NCy4dVaDTkbb2coqRKD1od4bZm9XrMK4JjO9urDjm1p67dAgT2HPXBR0cRdjaXcf2pYGt5gdjdS7P+sGV0MFS+KD/WJyNcrHR7sK5EFpz1PMYIBjzCCAYsCAQEwZDBfMREwDwYDVQQDDAhTdG9yZUtpdDERMA8GA1UECgwIU3RvcmVLaXQxETAPBgNVBAsMCFN0b3JlS2l0MQswCQYDVQQGEwJVUzEXMBUGCSqGSIb3DQEJARYIU3RvcmVLaXQCAQEwDQYJYIZIAWUDBAIBBQAwDQYJKoZIhvcNAQELBQAEggEAXpjATrUhXia7VrvUdkQ3rfA7bFj9otHVDEyIeHvfe7Ur8naWpdibXna+r687J6P2fMpqBF8sU5ZDFPb1/r+cgJDvj2jY7ARMwhxNMnWuOY4zekzvPiTP8blXuO+SsFcNuVTfgtAEQPsNEPxPvckheSiwS2b+4bcbxh0gnXY5YHYLwacVSfu3pj/tn8WFM80VWnntMaBAZUyXDv7Wdz9mgHlnqJUeS4A/U5lezscY0z+wMHZXVzMUf8Kr/wKbtxyIJJZKVXJlm8rsRNqFuVXhP1bGVGWMLX5NZFsfnPrT0YuEcb4WXyln7JnnvvfiWMBCUfyTrm6/Hq108+dydG5SXg==`
    _ = b64data
    _ = b64data2

    // in fact, one receipt file contain only 1 file
    retjson, err := iap.ParseIAPReceipt( b64data2 )
    if err != nil {
        log.Println(err)
    }
    log.Println( "parse IAP in DER format:", retjson )

    retjson, err = iap.ParseIAPReceiptBer( b64data )
    if err != nil {
        log.Println(err)
    }
    log.Println( "parse IAP in BER format:", retjson )

    bVerified := iap.VerifyIAPReceipt( b64data, "c68bce287e27494aa082acecb9328171", "com.temporary.ipatestapp",  "com.temporary.renew"  )
    log.Println( bVerified )

    log.Println("AES encryption with GCM")
    plaintext := []byte("Some plain text")

    key, _ := hex.DecodeString( "2836e95fcd10e04b0069bb1ee659955b" )
    ciphertext, _ := encrypt.AES_GCM_Encrypt(plaintext, key )
    log.Printf("Ciphertext: %x\n", ciphertext)
    recoveredPt, err := encrypt.AES_GCM_Decrypt (ciphertext, key)
    log.Printf("Recovered plaintext: %s , err:%v\n", recoveredPt, err )

}
